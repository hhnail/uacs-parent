<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jmu.uacs.association.mapper.TreeNodeMapper">
  <resultMap id="BaseResultMap" type="com.jmu.uacs.association.bean.TreeNode">
    <id column="tree_id" jdbcType="INTEGER" property="treeId" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="is_leaf" jdbcType="INTEGER" property="isLeaf" />
    <result column="p_id" jdbcType="INTEGER" property="pId" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    tree_id, value, label, type, level, is_leaf, p_id, description
  </sql>
  <select id="selectByExample" parameterType="com.jmu.uacs.association.bean.TreeNodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tree_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tree_node
    where tree_id = #{treeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tree_node
    where tree_id = #{treeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jmu.uacs.association.bean.TreeNodeExample">
    delete from tree_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jmu.uacs.association.bean.TreeNode">
    insert into tree_node (tree_id, value, label, 
      type, level, is_leaf, 
      p_id, description)
    values (#{treeId,jdbcType=INTEGER}, #{value,jdbcType=VARCHAR}, #{label,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{isLeaf,jdbcType=INTEGER}, 
      #{pId,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jmu.uacs.association.bean.TreeNode">
    insert into tree_node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="treeId != null">
        tree_id,
      </if>
      <if test="value != null">
        value,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="isLeaf != null">
        is_leaf,
      </if>
      <if test="pId != null">
        p_id,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="treeId != null">
        #{treeId,jdbcType=INTEGER},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="isLeaf != null">
        #{isLeaf,jdbcType=INTEGER},
      </if>
      <if test="pId != null">
        #{pId,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jmu.uacs.association.bean.TreeNodeExample" resultType="java.lang.Long">
    select count(*) from tree_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tree_node
    <set>
      <if test="record.treeId != null">
        tree_id = #{record.treeId,jdbcType=INTEGER},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=VARCHAR},
      </if>
      <if test="record.label != null">
        label = #{record.label,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.isLeaf != null">
        is_leaf = #{record.isLeaf,jdbcType=INTEGER},
      </if>
      <if test="record.pId != null">
        p_id = #{record.pId,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tree_node
    set tree_id = #{record.treeId,jdbcType=INTEGER},
      value = #{record.value,jdbcType=VARCHAR},
      label = #{record.label,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      is_leaf = #{record.isLeaf,jdbcType=INTEGER},
      p_id = #{record.pId,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jmu.uacs.association.bean.TreeNode">
    update tree_node
    <set>
      <if test="value != null">
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="isLeaf != null">
        is_leaf = #{isLeaf,jdbcType=INTEGER},
      </if>
      <if test="pId != null">
        p_id = #{pId,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where tree_id = #{treeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jmu.uacs.association.bean.TreeNode">
    update tree_node
    set value = #{value,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      is_leaf = #{isLeaf,jdbcType=INTEGER},
      p_id = #{pId,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR}
    where tree_id = #{treeId,jdbcType=INTEGER}
  </update>
</mapper>